
1. Write stored procedure which will display employee from Dept 10 and 20.
delimiter &&
create procedure disp_emp()
begin
select * from emp

where deptno IN(10,20);
end &&
delimiter ;

call disp_emp;
+-------+--------+-----------+------+------------+---------+------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+--------+-----------+------+------------+---------+------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 | NULL |     20 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 | NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 | NULL |     20 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 | NULL |     10 |
+-------+--------+-----------+------+------------+---------+------+--------+


2. Write stored procedure which will accept Dept no as input parameter and display all employees working in given department.

delimiter &&
create procedure Show_Dept(in dno int)
begin
select  * from emp 
where deptno=dno;
end &&
delimiter ;
call Show_Dept(10);
+-------+--------+-----------+------+------------+---------+------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+--------+-----------+------+------------+---------+------+--------+
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 | NULL |     10 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 | NULL |     10 |
+-------+--------+-----------+------+------------+---------+------+--------+

3. Write stored procedure which will accept salary range as input and return no of  employees as out parameter between the salary range.

delimiter &&
create procedure Salary(in s1 decimal(7,2),in s2 decimal(7,2), out total int)
begin 
select 
count(*) into total
from emp
 where sal IN(s1,s2) ;


end &&
delimiter ;

call Salary(2000.0,5000.0,@c);
 select @c;
+------+
| @c   |
+------+
|    1 |
+------+


4. write a procedure to insert record into employee table.
the procedure should accept empno, ename, sal, job, hiredate as input parameter
write insert statement inside procedure insert_rec to add one record into table
delimiter &&
create procedure insert_emp(in no int,in name varchar(10),in job varchar(20),in hire date,in sal decimal(7,2))
begin 
insert into emp10(empno,ename,job,hiredate,sal)
values(no,name,job,hire,sal);
end &&
delimiter ;

call insert_emp(111,'Akshay','Manager',curdate(),80000.00);
select * from emp10;

+-------+--------+-----------+------+------------+----------+---------+--------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO | netsal |
+-------+--------+-----------+------+------------+----------+---------+--------+--------+
|  7369 | SMITH  | sr.clerk  | 7902 | 1980-12-17 |   920.00 |    NULL |     20 |   1000 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 |  2116.00 |  300.00 |     30 |   1000 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 |  1653.13 |  500.00 |     30 |   1000 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 |  3421.25 |    NULL |     20 |   1000 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 |  1653.13 | 1400.00 |     30 |   1000 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 |  3277.50 |    NULL |     30 |   1000 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 |  2817.50 |    NULL |     10 |   1000 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 |  3450.00 |    NULL |     20 |   1000 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 |  5750.00 |    NULL |     10 |   1000 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 |  1725.00 |    0.00 |     30 |   1000 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 |  1265.00 |    NULL |     20 |   1000 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  1092.50 |    NULL |     30 |   1000 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 |  3450.00 |    NULL |     20 |   1000 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 |  1495.00 |    NULL |     10 |   1000 |
|   111 | Akshay | Manager   | NULL | 2022-05-27 | 80000.00 |    NULL |   NULL |   1000 |
+-------+--------+-----------+------+------------+----------+---------+--------+--------+

5. write a procedure to delete record from employee table.
the procedure should accept empno as input parameter.
write delete statement inside procedure delete_emp to delete one record from emp 
table
delimiter &&
create procedure deleteemp(in no int)
begin delete from emp10
where empno=no;
end &&
delimiter ;

call deleteemp(111);
select * from emp10;
+-------+--------+-----------+------+------------+---------+---------+--------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO | netsal |
+-------+--------+-----------+------+------------+---------+---------+--------+--------+
|  7369 | SMITH  | sr.clerk  | 7902 | 1980-12-17 |  920.00 |    NULL |     20 |   1000 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 2116.00 |  300.00 |     30 |   1000 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1653.13 |  500.00 |     30 |   1000 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 3421.25 |    NULL |     20 |   1000 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1653.13 | 1400.00 |     30 |   1000 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 3277.50 |    NULL |     30 |   1000 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2817.50 |    NULL |     10 |   1000 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3450.00 |    NULL |     20 |   1000 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5750.00 |    NULL |     10 |   1000 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1725.00 |    0.00 |     30 |   1000 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1265.00 |    NULL |     20 |   1000 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 | 1092.50 |    NULL |     30 |   1000 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3450.00 |    NULL |     20 |   1000 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1495.00 |    NULL |     10 |   1000 |
+-------+--------+-----------+------+------------+---------+---------+--------+--------+

6. write a procedure to find min,max,avg of salary and number of employees in the 
given deptno.
deptno --→ in parameter 
min,max,avg and count ---→ out type parameter
execute procedure and then display values min,max,avg and count


delimiter &&
CREATE PROCEDURE salcal(in pdeptno int,out pmax decimal(9,2) ,out pmin decimal(9,2),out pavg decimal(9,2),out pcount decimal(9,2))
BEGIN

SELECT MAX(sal),MIN(sal),AVG(sal),COUNT(*) INTO pmax,pmin,pavg,pcount
FROM emp
WHERE deptno=pdeptno;
END &&
DELIMITER ;
call salcal(20,@pmax,@pmin,@pavg,@pcount);
SELECT @pmax,@pmin,@pavg,@pcount;
+---------+--------+---------+---------+
| @pmax   | @pmin  | @pavg   | @pcount |
+---------+--------+---------+---------+
| 3000.00 | 800.00 | 2175.00 |    5.00 |
+---------+--------+---------+---------+ss


Views:
1. Create a view called EMPLOYEES_VU based on the employee numbers, employee names, and  department numbers and department name from the
 EMPLOYEES table and Dept Table. Display the contents of the EMPLOYEES_VU view.
create view EMPLOYEES_VU as
select e.empno,e.ename,d.deptno,d.dname 
from emp e ,dept d
where e.deptno=d.deptno;

select * from EMPLOYEES_VU;
+-------+--------+--------+------------+
| empno | ename  | deptno | dname      |
+-------+--------+--------+------------+
|  7369 | SMITH  |     20 | RESEARCH   |
|  7499 | ALLEN  |     30 | SALES      |
|  7521 | WARD   |     30 | SALES      |
|  7566 | JONES  |     20 | RESEARCH   |
|  7654 | MARTIN |     30 | SALES      |
|  7698 | BLAKE  |     30 | SALES      |
|  7782 | CLARK  |     10 | ACCOUNTING |
|  7788 | SCOTT  |     20 | RESEARCH   |
|  7839 | KING   |     10 | ACCOUNTING |
|  7844 | TURNER |     30 | SALES      |
|  7876 | ADAMS  |     20 | RESEARCH   |
|  7900 | JAMES  |     30 | SALES      |
|  7902 | FORD   |     20 | RESEARCH   |
|  7934 | MILLER |     10 | ACCOUNTING |
+-------+--------+--------+------------+



2.Using your EMPLOYEES_VU view, enter a query to display all employee names and department  names.

select ename "Employee name",dname "Department" from EMPLOYEES_VU;
+---------------+------------+
| Employee name | Department |
+---------------+------------+
| SMITH         | RESEARCH   |
| ALLEN         | SALES      |
| WARD          | SALES      |
| JONES         | RESEARCH   |
| MARTIN        | SALES      |
| BLAKE         | SALES      |
| CLARK         | ACCOUNTING |
| SCOTT         | RESEARCH   |
| KING          | ACCOUNTING |
| TURNER        | SALES      |
| ADAMS         | RESEARCH   |
| JAMES         | SALES      |
| FORD          | RESEARCH   |
| MILLER        | ACCOUNTING |
+---------------+------------+



3.Create a view named DEPT50 that contains the employee numbers, employee names, and  department numbers for all employees in department 50.
 Label the view columns EMPNO, EMPLOYEE, and DEPTNO. 

create view DEPT50
as
select empno "EPMNO",ename  "EMPLOYEE",deptno "DEPTNO"
from emp where deptno=50;

select * from DEPT50;s

4.Create a View that will display employees having salary greater than avarage salary of all employees. 

create view highsal
as 
select ename ,sal from emp
where sal>(select avg(sal) from emp );
select * from highsal;
+-------+---------+
| ename | sal     |
+-------+---------+
| JONES | 2975.00 |
| BLAKE | 2850.00 |
| CLARK | 2450.00 |
| SCOTT | 3000.00 |
| KING  | 5000.00 |
| FORD  | 3000.00 |

